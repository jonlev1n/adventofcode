from typing import Tuple
import numpy as np

test_data = [

    "",
    "#..#.",
    "#....",
    "##..#",
    "..#..",
    "..###",
]

lines = [

    "",
    ".##.#######....##...######.##.#.#...#.#..#..#.##...#.#.#.#.#.##..#......#..##..#.#..#.#.##.#.#...#..",
    ".#.#.#.##..########.....####..#..##...##.###...#########....####.##.####..##.##..####.##...#..#....#",
    "##..#######....##.##.#...#.#.#.##.#...#.###########....#.##.#.#...#...#..###..#..#..#.##.#.#.##..###",
    "#.##....##..##....#..#.####.#..##....###.#...#.####.#..#........#..####..##.#####.#..#.#.#..#...##.#",
    "..##.####...#..#.#.####..#.####....#....#.##.##.####...#..#....####..........##.....###.#..#.####.#.",
    "##.#.#.###.##..#..#...#.###.####.#...#.##.#.##...###.#.####.#.##......###.##.###..#..#.....##.###...",
    "#.#.#####.#######.######..##.#.....#.#.##...#..###.##.#.#....#.....#.##..#.##.#######..##..#....#..#",
    "...#.##.##.#...###.#...#....#.#...##..##.###......#.#.####....####.#######....###..###...#...#....##",
    ".##..##.....##.###..#..##..#......##.#.##...##.#.#.#.##...#####.##.....#....#.##.#.#.#....###.##.#..",
    "..####.##..#.###..#....#..####....#.#.###.####.#....##..#.#.##.....##.###.##.###..##......#....#.#..",
    "#.#.##.....#.##.###..##..####.#...#..##.#.#.##..##......#..###.######.#.##..##.###.#####.#.........#",
    ".#.#.#.####.#.####.#.#.#.#########..##.#.#.....#.####.#.#.#..###.#..#..##..#.#.#.##........#..#.####",
    "######.###..##.##.#.##.##...#.......#.#..#..##.#..#....#.#...##.#.###.#..##.##..##..#....###.#.###..",
    "#..#..#####......####.#.#####...#...##..##.#..###.....#..#.#...######.##.######..#.##.###.#...#...##",
    "..#####.#.#...##.###.####...#..##.##..##.##.#.#..####..#.####....#.#..#....##.##.##..#..##..##.#..#.",
    "....#####.##..##.###.##...#.##.#.##....##...###..#...####.#.#..#..###...##..##.###.##.##...###.###..",
    "....##......#....##..##.#.###..###..##.....##.#.#.#.#.###.###..#.##.####..#.#..#...#...##...#.##.##.",
    "##....##....#.#...#......#..#.#.#..#..##.##..#...###....#.#..#.#.###.###..######.##...##..##...##.#.",
    "##.#..###..#..##...##.#..#...###...#..####.#....####..##.###.##...#....#####.##...#............#.#..",
    "..##..#..###.#...##.#.##.#....###.#...#.#.###..#.#..#.##...#.#.###.###.####..#.#####.###..#.#...#..#",
    "..##..##.#..###.#..#.##.##..#.##.##.####......####.###..#.##..#.#....#.##...###...##.##.##.##.#.#.##",
    "#.##.#.#.#.###.#..#.##.#.#.####...#.#.###.##.##..#.#.#.###.#.##.##.#.#.#.###...##.....#......#...###",
    ".##..#########.####.####.#.##....#....#.#.#.#..#.#..##.###.###....###...#..#.##..#..##..#..#...##.##",
    "..###..##.##..#.#....##..##..#.####..#...#.#.####.#####..##....##.....#....#...####...##...###.####.",
    "########.##..##.##...##.##..###...#####.####.#.#.#.#.######...##..####..##..##....#..##.....###.####",
    ".##.....#..#....#.####...#.###..####...##.#...###.##...##..#..###.#..#.#####...##...#..##.##..###...",
    ".###....#.#####....#.#....#.###.......#######.#...##...#..#.#....#..##..###.####.....#.#.##..##.##..",
    "#...#.##.#.##.#.##...###.#..#.####...##...####.#...#.####.#.##...#...##.......#..#......#.##.#..#.#.",
    "..#####..#......#.#..#...#...#..#.....##.#...##..###.......##..##..#.#....###.#######..#...#.#...##.",
    ".......##.###....#.##....####..#..#.####.#.###########.#..#....###.#.###.#.##...#.#...###.#.#.....#.",
    ".###.##...###....###..#........##.......##...#.###...##.##..#....##.....##.##....##..#...#.##.#..##.",
    "####...#..##......###.##..#.#######.#.#..##...#.#.#...#####.####...########.#..#..###.############..",
    "#.#.#..##....#.....##...#.#####.##.#####...#....#.##.#..#.##.##...###..#.##.#.###.###..#.#.....#..#.",
    ".####.#####..#.##.#.###.##..#.#.##...#...#.#.....###..#..#.#...####...#...##.###.###..##..#.....##..",
    "##...#...##..####....#.#.####...#..##.....#.##...###..##.#.#.#.....##.##.#.........##...###..##....#",
    "####.#.##....#.....##.#....##.......#.#.#.#.###..#.###...###..#.##.###...#..###...###...#...##.#.###",
    ".#...#.#######.###########..#..###.##..#.##.##...#..###....#######.##..#.#....####.#..##...#...#....",
    "###..#..##.#.##.##....#..#.#.##...#####.##......#.##....#.##..##...#.##.#.##.##...#.#.#.#....#.##..#",
    ".##....#..#..#...#..#.#....#.#####...#..#.....#....#.#....##...##.##..#..#..........#.#.###...##.#.#",
    "#....#.####...######.#####.#...##..#.#...##..##...#.##.#.##.####.#####.....###..#..#.#.##.##.#..#...",
    "..##..###.####.##.....###.###...#....##.#.#...#.....##....#.#..#..#####..##.#.###.#..##.#.###...#.#.",
    "..##.##...#..#..#.#..#.#..##.#.#.......#.#.#...#.#..#..##..##.###.###...###..##...#####...#..#.###.#",
    "#.#.#.....##........#####.....#...##..###.#.#.##...#.##..#.###...#.######.###..##..###.#.#.#....##..",
    "..#.#.#.##.####.#..#.....#.##.......##...#..##.#####..###..#..#..####..##.##.#.##...####.#.##..#.##.",
    "#######.#..###.....##..#.#.#####.#..#.#.##.###..#.......###......##..#####..#.#..##.##....#..#..#..#",
    "##.##..###.....##..####.##.###.#.#......#.#.######.#..#......#####.....#######.#.#.#.###.#.###.#.###",
    "##.#..##.##...#...#..##..#...#.##.#...#####..##.##..#.#.#..#..##..#..#.#..#........#...#..###..#.##.",
    "#.#.#...#..###.#......#.#..#.########......##.#.##..#..##..#...###.#..#.#..#.#..#####.##...#########",
    ".#..#.##.#######.#####.##.####....#..#.#.#.#########.#.###....#.#....###...##.#.#....##....#.###....",
    "..######.####....#..##...####..#...#..#...#####.##.#.#....#..#.#######..#....#.#.#..#.#....###..##.#",
    "...#.###..#..######.####....##....####.##..#.#.#####...##.#..#..#.###.#.#.#.##....#.###.#..#.#.###..",
    "#..#.#.#.##.###.###.#....##.#####.#.##.....####.....#.....#.#.###...#.##.#...##.###...##....##.#..#.",
    "###..#.##...###..##..#..#.##.#.####...##.#..#.###..#.#..#.#.....#####..#.######..###..#....##..#.##.",
    "##..##.###.###.#####.#..##...####.###..###.###.##..#..##...#....##.###.##..###..#.........##.##..#.#",
    "##...#....#.##.#.#......####.##....##.##....##...#....#.#.....#....##...##....###..###..###.#.....##",
    ".####...#..###...#####.#.##...##.....##...####..#####..##...#..##...####.....#.##...#.###...#.##.###",
    "##.#..##..#..#.#####...#...##....##.#.#.#.########..#..#.#.###..###...##.##.#.##.#..##.#.##.###.#.#.",
    "###.#.###.###......#....#######.#.#..#..##...##.###....###.##.#...##....#...#..#.#...######..##.###.",
    "#.###.####.###.#.#..##.###..#.##..#...#..#.#..#####..#.#.###.#.#.#..#..#...#.#....######.##.....##.#",
    ".#...#.#.#..#.##..##..#.##.#####..#....######...#...#.....#.#..##.#...###.##.#######.#.##.#....#.#..",
    ".#....#...#..#.#.##.#....##....#..#...#..#.##..#.##.##..#..#..#.#.#..##....##.#..#...#..#...##.##...",
    "..#.#..#.#...#.###.#.#######.#...##..#.##...#.#.###.#..#.##..#..#.#######.####.#.####..#.##.#.##..#.",
    "#.#..#######.###..#.####..#.##.#...###.###.#..#.##.#...#...#.#.#.###..#.##.##....#.###...##...#.#..#",
    ".##...#...##.#.##..####.#.#.#..####.##...##..#..#.#.#..#..#....##.##.##...#.#.#.##.#....#.######...#",
    "##.#..#.##.....###.########.##.####...#.####...##.######.###..#######.#..##.#..#..#.#.####..###.#..#",
    "#.#..####.########...##..##..####..#.##.#..#..#..#..###.######..##.....##.##..#...#....#...##....###",
    "#############..##..###..#.###.##..###..##...##.#.......#####.#.#..##..#.....##.#..#....##....#.##...",
    "####.##.#.#...##.#..#..#.##.##.#.###..#.#.#.....#.#.###..#..##.#.#.##..##.#...##..###....##...##.#.#",
    "#...##.#....#..#.....##..#.#...##...##..#.#########.#..#.#.##........###.###...##..#####.###.#....#.",
    "..#..#...#..##...#..##...#.#.....#.#######.####.##..#.#...#......#.#..####.#........#...#.#..#..##.#",
    "#.##..##.#.#..##.#.####.#.#..#..#...#####.######..#.#.######...#..##.##..#####.#.#.##...##.#..##..##",
    "...##.##.#....###.#...#.##...#..###...##.#.#..#.###.....#...##.......##.###.##..##.#.##...#....##.#.",
    "###....##.#.#.#..#....####.#.....##.....#...##.#.....#.###.#####.#..#.##...###.......#...#.....#.#.#",
    "....#.#..#.#..##.####.##...#######.#..#.##.##..####..#.#....##..#.....#...#.##.####.##.#####.#######",
    "#..#..#.###....#.##.#.#.##.###.##.###.............#....##.##.###..#...#.#..#.#.#.#...#..#......#####",
    "...##..##..#....####.#..##.#.#.#.#.....#.#..###...##.##....#####......#####.##..###.##.#..###..#...#",
    ".##..#.#.#.##.###.#.#..##...#.##..#####.######..#.#...#....#...#..##..#.#.....#.#.##..##.#..##.##...",
    ".#.#.#.#.#..####.#.#.##.....##.##.#.##..###.#..##...##..#....##..#..##...##.#..##..####.#..#.#...#..",
    "#.#..##.#.#..#...##.##....#.#...###...###.####.#.####.##.#...##.#..##....###..#..#.##.#.#..#.#.##..#",
    ".###...####.#.###....##..#...#####......##...#...#..#.#..###..#.....##..###.#.###.....#.##..####.#.#",
    "#..###.#....#..###...#..####.####..#.#####.#.....#...##..##..#...#..#...#.##...##..########..#.##.#.",
    "..######..#.####..#..####..#..#...##...#...###.##...#..###.##...#.###.##...#....#....##..##.##.###.#",
    "###.#.##..###..#..#........#.#.........##..##.....###.###.#.......###..#.#....##....#.....#.##...###",
    "..#.....#.#..###.##.####.#.......#.#.##..##.#.##...####..#.###..#.###.#####.####....#.#...#.#..##..#",
    ".....######.###..##.#..####..#..##.####.##..##.##...#.#..##...#.##..####.####...##..#.....#.....####",
    "###.##.#..#.##.#.#.###....#..#.#..##..#.....###.##.##.#.###.####...##.###..#..##.##..##..##.###...##",
    "#....####.####.####.#.######...#########..##..#.#....#.......#.##.#.....#.###..#.##....#.##..##.##.#",
    "...##..#...#..##..#.###.##..#..###.###....###.####.#.####.#.#.#.#.#....#######.##..###.#.######.##..",
    "#...#.#.#...#.#.#..#.###.#.#####.#.###.#..##.#.####...#.#.#.....#..####..#.###....##.##..#.#..##.#.#",
    "...##..##....#.##.###...##.....###....#..###....#.#.##..###..###..#.#....#.###....#.##..######..#.##",
    "...#..#...###...##.###.....#...#.#..#.##..###.#....###.#.#...##.#..##..###.#...#..#..#.##..#...#.#..",
    "#.....#.###.##..##.#..#..#....#..##.###.##.#.#..##...#....##.##.#.#....#.###..#..###....###.#.#.#.##",
    "...##.#..###..##..##.###.#.#..###....#.##..##.#..###...##...#.#.....###.....##.....#.#.##.#.###..#.#",
    "..##.##..#...#..#.#.##.##.########.#.######....######.#.###..##...###..#####.##.#..#.##.#.##..######",
    ".....##.##..#.#.#...###.#.#....##...###.....#.###...#.....###.#......#.#..#.##..#.######.#...####..#",
    "..####....####.#......#.##..###.###...##########..##......#..###.#.#...#####.#.#########..###..#....",
    "#..#..#.#..#..#..##..#.###.#...#.#.####...#.#######...##.##..#..####.#.....#..##.####.##.##.##.#....",
    "#..#....####.#.###.##...##.###.####.##.######....#.#.#.###.##.##.#.#.##...##.#.#.##.#..#..###.#.....",
    ".###.#....##.#.###...##.#.##...##.###.#.####.##.#####..#.##....##..##....#######...#..###.#....##...",
    ".#..#..###.#.##.....##..#.#.###.###..#...#.#.#...#..##..###....#..##........#.#.##..##.####.#.###.#.",
]

# data = test_data
data = lines

key = data[0]
a = np.array([[n for n in d] for i, d in enumerate(data) if i > 1])


def pad_a(arr, iteration):
    # Call numpy.insert(arr, idx, values, axis=1) to insert values as a column to the array arr at index idx.
    l, w = arr.shape
    if iteration % 2 == 0:
        c = ["." for y in range(0, l)]
        r = ["." for x in range(0, w + 2)]
    else:
        c = ["#" for y in range(0, l)]
        r = ["#" for x in range(0, w + 2)]

    arr = np.insert(arr, 0, c, axis=1)
    arr = np.insert(arr, w + 1, c, axis=1)
    arr = np.insert(arr, 0, r, axis=0)
    arr = np.insert(arr, l + 1, r, axis=0)
    return arr


def num_from_binary(s):
    n = 0
    for idx, val in enumerate(reversed(s)):
        n += int(val) * 2 ** idx
    return n


def get_subimage_binary(arr, iteration, p=Tuple):
    y = p[0]
    x = p[1]
    l, w = arr.shape
    adj = []
    for j in range(x - 1, x + 2):
        for i in range(y - 1, y + 2):
            if i < 0 or j < 0 or i >= w or j >= l:
                if iteration % 2 == 0:
                    adj.append(".")
                else:
                    adj.append("#")
            elif i >= 0 and j >= 0 and i < w and j < l:
                adj.append(arr[j][i])
    # print(adj)
    b = "".join(["0" if c == "." else "1" for c in adj])
    # print(b)
    return b


def pt1():
    steps = 50
    arr = a
    for k in range(0, steps):
        arr = pad_a(arr, k)
        hash_ct = 0
        l, w = arr.shape
        new_arr = np.zeros((l, w), dtype=str)
        for i in range(0, l):
            for j in range(0, w):
                b = get_subimage_binary(arr, k, (j, i))
                num = num_from_binary(b)
                val = key[num]
                if val == "#":
                    hash_ct += 1
                new_arr[i][j] = val
        arr = new_arr

    print(hash_ct)


pt1()
